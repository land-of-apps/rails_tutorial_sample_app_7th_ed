name: AppMap Analysis

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  checks: write

env:
  DISABLE_SPRING: 'true'
  RAILS_ENV: 'test'

jobs:
  record-appmaps:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        ci_node_total: [2]
        ci_node_index: [0, 1]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Prepare bundle for AppMap installation
        run: bundle config unset deployment

      - name: Install AppMap tools
        uses: getappmap/install-action@v1.0
        with:
          project-type: bundler

      - name: Rails test setup
        run: ./bin/rails db:migrate
      - name: Run tests
        run: ./bin/rake partition:test\[${{ matrix.ci_node_index }},${{ matrix.ci_node_total }}\]

      - name: Save AppMap archive
        uses: getappmap/archive-action@v1-pre.13
        with:
          archive-id: ${{ matrix.ci_node_index }}

  appmap-analysis:
    runs-on: ubuntu-latest

    needs: [ record-appmaps ]

    steps:
      - uses: actions/checkout@v3
      - name: Install AppMap tools
        uses: getappmap/install-action@v1.0
        with:
          install-appmap-library: false
      
      - name: Merge AppMaps
        if: (success() || failure())
        uses: getappmap/archive-action/merge@v1-pre.13
        with:
          revision: ${{ github.event.pull_request.head.sha }}
          archive-count: 2

      - name: Archive AppMaps
        if: github.event_name != 'pull_request'
        uses: getappmap/archive-action@v1-pre.13
      
      - name: Analyze AppMaps
        if: (success() || failure()) && github.event_name == 'pull_request'
        uses: getappmap/analyze-action@v1-pre.16
        with:
          base-revision: ${{ github.event.pull_request.base.sha }}
          head-revision: ${{ github.event.pull_request.head.sha }}
          github-token: ${{ secrets.GITHUB_TOKEN }}